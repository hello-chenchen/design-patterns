// {type:class}
// {generate:true}
[note: Abstruct Pattern{bg:cornsilk}]
[FactoryAType|type: enum|+CC_ENUM_FACTORYA_METHOD_A;+CC_ENUM_FACTORYA_METHOD_B]
[FactoryBType|type: enum|+CC_ENUM_FACTORYB_METHOD_A;+CC_ENUM_FACTORYB_METHOD_B]
[CallClass|type: class||+static main():void{bg:red}]
[Factory|type: class||+generateFactory():AbstructFactory]
[AbstructFactory|type:abstruct-class||+getFactoryA():FactoryAInterface|+getFactoryB():FactoryBInterface]
[FactoryAInterface|type: interface||+invokeMethod():String]
[FactoryBInterface|type: interface||+invokeMethod():String]
[FactoryAImplA|type: class||+invokeMethod():String]
[FactoryAImplB|type: class||+invokeMethod():String]
[FactoryBImplA|type: class||+invokeMethod():String]
[FactoryBImplB|type: class||+invokeMethod():String]
[CallClass]generateFactory->[Factory]
[Factory]-.->[FactoryAType]
[Factory]-.->[FactoryBType]
[Factory]->[AbstructFactory]
[AbstructFactory]+-[FactoryAInterface]
[AbstructFactory]+-[FactoryBInterface]
[FactoryAInterface]^-.-[FactoryAImplA]
[FactoryAInterface]^-.-[FactoryAImplB]
[FactoryBInterface]^-.-[FactoryBImplA]
[FactoryBInterface]^-.-[FactoryBImplB]