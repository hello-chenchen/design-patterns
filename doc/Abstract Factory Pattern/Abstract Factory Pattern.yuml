// {type:class}
// {generate:true}
// {direction:topDown}
[note: Abstract Pattern{bg:cornsilk}]
[CallClass||+static main():void{bg:red}]
[<<enum>>;FactoryType|+CC_ENUM_FACTORY_A;+CC_ENUM_FACTORY_B]
[Factory||+generateFactory(FactoryType:type):AbstractFactory]
[<<abstruct>>;AbstractFactory||+abstract getProductA():ProductA;+getProductB():ProductB]
[FactoryA||+Override getProductB():ProductB;+getProductA():ProductA]
[FactoryB||+Override getProductA():ProductA;+getProductB():ProductB]
[FactoryC||+Override getProductA():ProductA;+getProductB():ProductB]
[<<interface>>;ProductA||+produceA():String]
[ProductA1||+produceA():String]
[ProductA2||+produceA():String]
[ProductA3||+produceA():String]
[<<interface>>;ProductB||+produceB():String]
[ProductB1||+produceB():String]
[ProductB2||+produceB():String]
[ProductB3||+produceB():String]
[CallClass]generateFactory->[Factory]
[<<enum>>;FactoryType]<-.-[Factory]
[Factory]->[<<abstruct>>;AbstractFactory]
[<<abstruct>>;AbstractFactory]^-.-[FactoryA]
[<<abstruct>>;AbstractFactory]^-.-[FactoryB]
[<<abstruct>>;AbstractFactory]^-.-[FactoryC]
[<<abstruct>>;AbstractFactory]-.->[<<interface>>;ProductA]
[<<abstruct>>;AbstractFactory]-.->[<<interface>>;ProductB]
[<<interface>>;ProductA]^-.-[ProductA1]
[<<interface>>;ProductA]^-.-[ProductA2]
[<<interface>>;ProductA]^-.-[ProductA3]
[<<interface>>;ProductB]^-.-[ProductB1]
[<<interface>>;ProductB]^-.-[ProductB2]
[<<interface>>;ProductB]^-.-[ProductB3]
[FactoryA]->[ProductA1]
[FactoryA]->[ProductB1]
[FactoryB]->[ProductA2]
[FactoryB]->[ProductB2]
[FactoryC]->[ProductA3]
[FactoryC]->[ProductB3]